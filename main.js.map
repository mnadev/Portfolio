{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\ninterface Location {\n  city: string;\n  state: string;\n  country: string;\n}\n\ninterface SocialNetworkProfile {\n  network: string;\n  url: string;\n  fa: string;\n}\n\ninterface Job {\n  company: string;\n  position: string;\n  website: string;\n  startDate: string;\n  endDate: string;\n  summary: string;\n  highlights: string[];\n}\n\ninterface Education {\n  institution: string;\n  area: string;\n  studyType: string;\n  startDate: string;\n  endDate: string;\n  gpa: string;\n  areas_of_focus: string[];\n}\n\ninterface Award {\n  title: string;\n  date: string;\n  awarder: string;\n  url: string;\n  summary: string;\n}\n\ninterface Publication {\n  name: string;\n  authors: string;\n  publisher: string;\n  releaseDate: string;\n  url: string;\n}\n\ninterface Project {\n  name: string;\n  type: string;\n  date: string;\n  description: string[];\n  tech: Skill[];\n  link: string[];\n  paper_link: string;\n}\n\ninterface Skill {\n  name: string;\n  fa: string;\n}\n\ninterface Skills {\n  name: string;\n  keywords: Skill[];\n}\n\ninterface Language {\n  language: string;\n  fluency: string;\n}\n\ninterface Resume {\n  name: string;\n  label: string;\n  pictureURL: string;\n  email: string;\n  phone: string;\n  website: string;\n  resume: string;\n  summary: string;\n  interests: string[];\n  location: Location;\n  profiles: SocialNetworkProfile[];\n  work: Job[];\n  education: Education[];\n  awards: Award[];\n  publications: Publication[];\n  projects: Project[];\n  skills: Skills[];\n  languages: Language[];\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent  implements OnInit{\n  title = 'Mohammad Nadeem';\n  public resumeData: Resume;\n  constructor(private http: HttpClient) {\n  }\n  ngOnInit () {\n    this.http.get<Resume>('../assets/resume.json').toPromise().then(data => {\n      this.resumeData = data;\n    });\n  }\n}\n","<head>\n  <link href=\"https://fonts.googleapis.com/css2?family=Material+Icons\" rel=\"stylesheet\" />\n  <link href=\"https://fonts.googleapis.com/css?family=Ubuntu:300\" rel=\"stylesheet\" />\n  <link href=\"https://fonts.googleapis.com/css?family=Open+Sans\" rel=\"stylesheet\" />\n  <link href=\"https://fonts.googleapis.com/css?family=Raleway:300,400\" rel=\"stylesheet\" />\n  <link href=\"https://fonts.googleapis.com/css?family=Open+Sans|Ubuntu+Mono\" rel=\"stylesheet\" />\n  <link href=\"https://fonts.googleapis.com/css?family=Source+Code+Pro\" rel=\"stylesheet\" />\n  <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.2.0/css/all.css\" />\n  <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.2.0/css/v4-shims.css\" />\n  <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\" />\n</head>\n<body>\n  <mat-toolbar color=\"primary\">\n      <mat-toolbar-row>\n          <button mat-icon-button>\n              <mat-icon (click)=\"sidenav.toggle()\"><i class=\"fas fa-bars\"></i></mat-icon>\n          </button>\n          <h1>Mohammad Nadeem</h1>\n          <span class=\"menu-spacer\"></span>\n      </mat-toolbar-row>\n  </mat-toolbar>\n  <mat-sidenav-container>\n      <mat-sidenav #sidenav>\n          <mat-nav-list>\n              <a mat-list-item href=\"#about\" class=\"navlink\"> About<i class=\"fas fa-info\"></i> </a>\n              <a mat-list-item href=\"#work\" class=\"navlink\"> Work Experience <i class=\"fas fa-briefcase\"></i></a>\n              <a mat-list-item href=\"#education\" class=\"navlink\"> Education <i class=\"fas fa-graduation-cap\"></i></a>\n              <a mat-list-item href=\"#projects\" class=\"navlink\"> Projects<i class=\"fas fa-project-diagram\"></i> </a>\n              <a mat-list-item href=\"#awards\" class=\"navlink\"> Awards<i class=\"fas fa-award\"></i> </a>\n              <a mat-list-item href=\"#pubs\" class=\"navlink\"> Publications<i class=\"fab fa-leanpub\"></i> </a>\n          </mat-nav-list>\n      </mat-sidenav>\n      <mat-sidenav-content>\n          <div style=\"height: 88vh;\">\n              <router-outlet></router-outlet>\n              <mat-card id=\"about\" class=\"jumbotron container-fluid\">\n                  <mat-card-title>\n                    About<i class=\"fas fa-info\"></i>\n                  </mat-card-title>\n                  <ng-container *ngIf=\"resumeData\">\n                      <mat-card>\n                          <mat-card-title>\n                              {{ resumeData.name }}\n                          </mat-card-title>\n                          <mat-card-subtitle>{{ resumeData.summary }}</mat-card-subtitle>\n                          <mat-card-content>\n                              <a href=\"mailto:{{ resumeData.email }}\">\n                                  <i class=\"fas fa-envelope-square fa-2x\"></i>\n                              </a>\n                              <a href=\"tel:{{ resumeData.phone }}\"> <i class=\"fas fa-phone\"></i> {{ resumeData.phone }} </a>\n                          </mat-card-content>\n                          <mat-card-subtitle>\n                              {{ resumeData.location.city }}, {{ resumeData.location.state }}, {{ resumeData.location.country }}\n                          </mat-card-subtitle>\n                          <mat-card-subtitle>\n                              <ng-container *ngFor=\"let profile of resumeData.profiles\">\n                                  <a href=\"{{ profile.url }}\">\n                                      <i class=\"fa {{ profile.fa }} fa-2x \"></i>\n                                  </a>\n                              </ng-container>\n                              <a href=\"{{ resumeData.resume }}\" class=\"navItem\"><i class=\"far fa-file-pdf fa-2x\"></i></a>\n                          </mat-card-subtitle>\n                          <mat-card-subtitle>Interests:</mat-card-subtitle>\n                          <mat-chip-list>\n                              <mat-chip *ngFor=\"let interest of resumeData.interests\" selected>\n                                  {{ interest }}\n                              </mat-chip>\n                          </mat-chip-list>\n                      </mat-card>\n                      <mat-card *ngFor=\"let skills of resumeData.skills\">\n                          <mat-card-subtitle>{{ skills.name }}</mat-card-subtitle>\n                          <mat-chip-list>\n                              <mat-chip *ngFor=\"let k of skills.keywords\" selected>\n                                  <i *ngIf=\"k.fa != ''\" class=\"{{ k.fa }}\"></i>\n                                  <ng-container *ngIf=\"k.fa == ''\" class=\"{{ k.fa }}\">{{ k.name }}</ng-container>\n                              </mat-chip>\n                          </mat-chip-list>\n                      </mat-card>\n                      <mat-card>\n                          <mat-card-subtitle>Spoken Languages:</mat-card-subtitle>\n                          <mat-chip-list>\n                              <mat-chip *ngFor=\"let language of resumeData.languages\" selected>\n                                  {{ language.language }} ({{ language.fluency }})\n                              </mat-chip>\n                          </mat-chip-list>\n                      </mat-card>\n                  </ng-container>\n              </mat-card>\n              <mat-card id=\"work\" class=\"jumbotron container-fluid\">\n                  <mat-card-title>\n                    Work Experience<i class=\"fas fa-briefcase\"></i>\n                  </mat-card-title>\n                  <ng-container *ngIf=\"resumeData\">\n                      <mat-card *ngFor=\"let job of resumeData.work\">\n                          <mat-card-title> {{ job.position }} @ <a href=\"{{ job.website }}\"> {{ job.company }} </a> </mat-card-title>\n                          <mat-card-subtitle> {{ job.startDate }} to {{ job.endDate }} </mat-card-subtitle>\n                          <mat-card-subtitle> {{ job.summary }} </mat-card-subtitle>\n                          <mat-card-content *ngFor=\"let highlight of job.highlights\">\n                              <li id=\"not_nav\">{{ highlight }}</li>\n                          </mat-card-content>\n                      </mat-card>\n                  </ng-container>\n              </mat-card>\n              <mat-card id=\"education\" class=\"jumbotron container-fluid\">\n                  <mat-card-title>\n                    Education<i class=\"fas fa-graduation-cap\"></i>\n                  </mat-card-title>\n                  <ng-container *ngIf=\"resumeData\">\n                      <mat-card *ngFor=\"let edu of resumeData.education\">\n                          <mat-card-title> {{ edu.studyType }} from {{ edu.institution }} </mat-card-title>\n                          <mat-card-subtitle> {{ edu.area }} </mat-card-subtitle>\n                          <mat-card-subtitle> From {{ edu.startDate }} to {{ edu.endDate }} </mat-card-subtitle>\n                          <mat-card-content> GPA: {{ edu.gpa }} </mat-card-content>\n                          <mat-card-content>\n                              Areas of Focus:\n                              <mat-chip-list>\n                                  <mat-chip *ngFor=\"let area of edu.areas_of_focus\" selected>\n                                      {{ area }}\n                                  </mat-chip>\n                              </mat-chip-list>\n                          </mat-card-content>\n                      </mat-card>\n                  </ng-container>\n              </mat-card>\n              <mat-card id=\"projects\" class=\"jumbotron container-fluid\">\n                  <mat-card-title>\n                    Projects<i class=\"fas fa-project-diagram\"></i>\n                  </mat-card-title>\n                  <ng-container *ngIf=\"resumeData\">\n                      <mat-card *ngFor=\"let project of resumeData.projects\" class=\"col-md-4 col-sm-6 col-xs-12 inline-block\">\n                          <mat-card-title>\n                              {{ project.name }}\n                              <mat-card-content>\n                              <ng-container *ngIf=\"project.paper_link != 'none'\">\n                                  <a href=\"/assets/{{ project.paper_link }}\"><i class=\"far fa-file-pdf fa-2x\"></i></a>\n                              </ng-container >\n                              <ng-container *ngFor=\"let l of project.link; let i = index\">\n                                  <a href=\"{{ l }}\"><i class=\"far fa-folder-open fa-2x\"></i> {{ i + 1 }} | </a>\n                              </ng-container>\n                            </mat-card-content>\n\n                              <mat-card-content>\n                                <mat-chip *ngFor=\"let comp of project.tech\" selected>\n                                  <i *ngIf=\"comp.fa != ''\" class=\"{{ comp.fa }}\"></i>\n                                  <ng-container *ngIf=\"comp.fa == ''\" class=\"{{ comp.fa }}\">{{ comp.name }}</ng-container>\n                                </mat-chip>\n                              </mat-card-content>\n                          </mat-card-title>\n                          <mat-card-subtitle> {{ project.date }} </mat-card-subtitle>\n                          <ul>\n                              <mat-card-content *ngFor=\"let description of project.description;\">\n                                  <li id=\"not_nav\">{{ description }}</li>\n                              </mat-card-content>\n                          </ul>\n                      </mat-card>\n                  </ng-container>\n              </mat-card>\n              <ng-container *ngIf=\"resumeData\">\n                  <mat-card id=\"awards\" class=\"jumbotron container-fluid\">\n                      <mat-card-title>Awards<i class=\"fas fa-award\"></i></mat-card-title>\n                      <mat-card *ngFor=\"let award of resumeData.awards\">\n                          <mat-card-subtitle>\n                              <a href=\"{{ award.url }}\">{{ award.title }}, {{ award.date }} </a>\n                          </mat-card-subtitle>\n                          <mat-card-subtitle> {{ award.awarder }} </mat-card-subtitle>\n                          <mat-card-content> {{ award.summary }} </mat-card-content>\n                      </mat-card>\n                  </mat-card>\n                  <mat-card id=\"pubs\" class=\"jumbotron container-fluid\">\n                      <mat-card-title>Publications<i class=\"fab fa-leanpub\"></i></mat-card-title>\n                      <mat-card *ngFor=\"let publication of resumeData.publications\">\n                          <mat-card-subtitle>\n                              <a href=\"{{ publication.url }}\">{{ publication.authors }}, {{ publication.name }}, {{ publication.publisher }}, {{ publication.releaseDate }} </a>\n                          </mat-card-subtitle>\n                      </mat-card>\n                  </mat-card>\n              </ng-container>\n          </div>\n      </mat-sidenav-content>\n  </mat-sidenav-container>\n</body>\n","import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\nimport {MatButtonModule} from '@angular/material/button'; ;\nimport {MatCardModule } from '@angular/material/card';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSidenavModule} from '@angular/material/sidenav';  \nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar'; \n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatCardModule,\n    MatChipsModule,\n    MatIconModule,\n    MatListModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatToolbarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}